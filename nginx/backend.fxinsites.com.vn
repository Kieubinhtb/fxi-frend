server {
    charset utf-8;
    client_max_body_size 128M;
    #
    root /var/www/html/backend.fxinsites;
    #
    index /backend/web/index.php;
    #
    server_name  backend.fxinsites.com.vn;
    
    #    
    access_log  /var/www/html/backend.fxinsites/nginx-access.log;
    error_log   /var/www/html/backend.fxinsites/nginx-error.log;

    # Enable HSTS. This forces SSL on clients that respect it, most modern browsers. The includeSubDomains flag is optional.
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";

    location / {
        try_files $uri $uri/ /backend/web/index.php?$args;
        proxy_set_header   X-Real-IP             $remote_addr;
        proxy_set_header   X-Forwarded-For       $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto https;
       # proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
              
    }

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass    unix:/var/run/php/php7.2-fpm.sock;
        fastcgi_param   SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;

        client_max_body_size 100M;
    }

    # Media: images, icons, video, audio, HTC
    location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
        expires 7d;
        access_log off;
        #add_header Cache-Control "uploads";
    }
   location ~* \.(?:ico|css|js|gif|jpe?g|png|jpg|webp|woff|woff2)(.*)$ {
       root /var/www/html/backend.fxinsites/backend/web/;
       expires max;
       add_header Pragma public;
       add_header Cache-Control "public, must-revalidate, proxy-revalidate";
   }


    location /uploads/.* {
        
    }

    listen [::]:443 ssl; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /var/www/html/backend.fxinsites/ssl-vn/fullchain.pem; # managed by Certbot
    ssl_certificate_key /var/www/html/backend.fxinsites/ssl-vn/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}
# Redirect HTTP -> HTTPS
server {
    if ($host = backend.fxinsites.com.vn) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80;
    server_name  backend.fxinsites.com.vn;
    return 404; # managed by Certbot
}